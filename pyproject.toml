[tool.poetry]
name = "chesspal-mcp-engine" # Standardized name
version = "0.3.0" # Keep version for now
description = "ChessPal MCP Engine: A Stockfish-powered chess engine exposed via MCP." # Standardized description
authors = ["Your Name <your.email@example.com>"] # Standardized author (placeholder)
readme = "README.md"
packages = [
    { include = "chesspal_mcp_engine", from = "src" } # Standardized package include
]
license = "GPL-3.0-or-later"
repository = "https://github.com/wilson-urdaneta/dylangames-mcp-chess-engine" # Keep original repo for now
keywords = ["chess", "stockfish", "mcp", "chesspal"] # Updated keywords
classifiers = [
    "Development Status :: 4 - Beta", # Keep classifiers
    "Intended Audience :: Developers",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Topic :: Games/Entertainment :: Board Games",
]

[tool.poetry.dependencies]
python = ">=3.10,<4.0" # Aligned Python version
fastapi = "^0.110.0" # Aligned fastapi version
mcp = {version = "^1.6", extras = ["cli"]} # Aligned mcp version and extras
python-chess = "^1.999" # Keep python-chess version
setuptools = "^69.2.0" # Keep setuptools version (often needed for build)
uvicorn = {extras = ["standard"], version = "^0.27.1"} # Aligned uvicorn version
pydantic-settings = "^2.2.1" # Aligned pydantic-settings version
structlog = "^25.2.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.0" # Aligned pytest version
pytest-cov = "^5.0.0" # Keep pytest-cov version
black = "^24.2.0" # Keep black version
flake8 = "^7.0.0" # Keep flake8 version
# flake8-docstrings = "^1.7.0" # Removed to align with agent for now
flake8-bugbear = "^24.2.0" # Keep flake8-bugbear version
flake8-comprehensions = "^3.14.0" # Keep flake8-comprehensions version
isort = "^5.13.2" # Keep isort version (agent uses ^5.13.0, close enough)
mypy = "^1.15.0" # Keep mypy version
pre-commit = "^4.2.0" # Aligned pre-commit version
httpx = "^0.27.0" # Aligned httpx version
pytest-asyncio = "^0.26.0" # Keep pytest-asyncio version (newer than agent)
pytest-mock = "^3.14.0" # Added from agent
pytest-httpx = "^0.30.0" # Added from agent
mcp = {extras = ["cli"], version = "^1.6"} # Align MCP dev dep version

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
chesspal-mcp-engine = "chesspal_mcp_engine.main:main_cli" # Point to main_cli instead of removed main

[tool.black]
line-length = 120
target-version = ['py310']
include = '\.pyi?$' # Keep include

[tool.isort]
profile = "black"
line_length = 120 # Increased line length
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

# [tool.flake8] # Removed as config is in .flake8

[tool.pytest.ini_options]
asyncio_mode = "auto" # Aligned with agent
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py", "tests.py"] # Keep specific python_files pattern
addopts = "-sv --cov=chesspal_mcp_engine --cov-report=term-missing -W ignore::DeprecationWarning" # Added warning filter
markers = [
    "integration: marks tests as integration tests (require external dependencies like Stockfish binary)",
    "docker: marks tests that require docker",
]
filterwarnings = [
    "ignore::DeprecationWarning:httpx.*:",
    "ignore::Warning:pytest_asyncio.*:"
]

# Standardized coverage configuration (Restored)
[tool.coverage.run]
source = ["chesspal_mcp_engine"] # Updated source path
branch = true
omit = [ # Standardized omissions (based on agent, minus scripts)
    "*/__main__.py",
    "tests/*",
    "src/chesspal_mcp_engine/logging_config.py",
    "src/chesspal_mcp_engine/config.py",
    "src/chesspal_mcp_engine/exceptions.py",
    "src/chesspal_mcp_engine/engine_wrapper.py",
    "src/chesspal_mcp_engine/models.py"
]

[tool.coverage.report]
show_missing = true
fail_under = 70 # Standardized fail_under to 70%
skip_covered = false
exclude_lines = [ # Standardized exclude lines
    "pragma: no cover",
    "if TYPE_CHECKING:",
    "raise NotImplementedError",
    "@(abc\\.)?abstractmethod"
]

# Add unified MyPy configuration (same as agent, adjusted for engine specifics)
[tool.mypy]
python_version = "3.10"
ignore_missing_imports = true
follow_imports = "silent"
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
warn_unreachable = true
strict_optional = true

[[tool.mypy.overrides]]
module = [
    "chess.*", # Keep engine specific
    "fastapi.*", # Added common
    "uvicorn.*", # Added common
    "pydantic_settings.*", # Added common
    "mcp.*", # Added common
    "httpx.*", # Added common
    "pytest.*", # Added for tests
    "pytest_mock.*", # Added for tests
    "pytest_httpx.*" # Added for tests
]
ignore_missing_imports = true
